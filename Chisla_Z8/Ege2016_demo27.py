N = int(input())
# Создаем очередь чисел, среди которых левые
    # числа, выходящие из очереди, фильтровать
    # на минимальность для нечетных, правые
    # просто на минимальность. Считываем в очередь
    # первые 6 чисел"""
Q = [int(input()) for i in range (6)] #создали очередь
min_even = 1001 # задаем максимально "плохое"
    # число, которое превышает заданное по условию
    # задачи маскимальное значение числа
beta = 1000001
for i in range (N-6):
    # на каждой итерации при считывании очередного
    # числа одно число из очереди выбывает и
    # проверяется. Проверка первого левого элемента
    # - показана  ниже до команды min_even = x
    x = Q[0]

    min_x = min(min_x, x) #проверяем на минимальность
    if x%2 == 0 and x < min_even: # проверяем на четность
        min_even = x
    x = int(input())  #считываем второе значение
    beta = min(beta, x*min_even)
        #ищем минимальное произведение текущего х
        # и четного минимального min_even, которое
        # равно предыдущему х, т. е. проверяется
        # условие задачи
    if x%2 == 0:
        beta = min(beta, x*min_x)
        #полученный х  добавляем в конец
        # очереди, а из ее начала удаляем левый элемент

    for k in range(5):
        Q[k] = Q[k+1] # удаляем левый элемент из очереди
    # делаем поэлементный сдвиг очереди
    Q[5] = x
    # это же можно делать без цикла:
    # Q.pop(0)
    # Q.append(x)




